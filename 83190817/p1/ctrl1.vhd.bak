--steven miller
--117140
LIBRARY ieee;
USE ieee.std_logic_1164.all;

entity ctrl1 is

generic(width : positive := 16);

port
(
	output: out std_logic_vector(width-1 downto 0);
	x_sel, y_sel, y_en, x_en, output_en: out std_logic;
	x_lt_y,x_ne_y, clk, reset : in std_logic
	
);
end ctrl1;

architecture arch of ctrl1 is

type asmstatetype is (wait_, load, compare, done);
signal state, nextstate: asmstatetype;

begin

--state transitions
process(clk, reset)
begin
if(reset = '1') then
	state <= wait_;
elsif(clk'event and clk = '1') then

	
end if
end process;

--outputs of states
process(state)
begin

case state is
	when wait_ =>
		x_sel <= 	'0';
		y_sel <= 	'0';
		y_en  <= 	'0';
		x_en  <= 	'0';
		output_en <='0';
	when load =>
		x_sel <= 	'0';
		y_sel <= 	'0';
		y_en  <= 	'1';
		x_en  <= 	'1';
		output_en <='0';
	when compare =>
		x_sel <= 	'0';
		y_sel <= 	'0';
		y_en  <= 	'0';
		x_en  <= 	'0';
		output_en <='0';
	when compare =>
		x_sel <= 	'0';
		y_sel <= 	'0';
		y_en  <= 	'0';
		x_en  <= 	'0';
		output_en <='1';

end process();